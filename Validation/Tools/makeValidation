#!/bin/bash

if [ $# == 0 ]; then
  echo "Usage : $0 CMSSW_VERSION [CMSSW_VERSION2 CMSSW_VERSION3 ...]"
  echo " Set environment variable NOSUBMIT not to automatically submit jobs to LSF"
  exit
fi

BASEDIR=`pwd`
RUNTIMEDIR=$(readlink -f $0 | sed -e "s#$(basename $0)##g")'bin'

if [ ! -d $RUNTIMEDIR ]; then
  mkdir $RUNTIMEDIR
fi

echo "@@ Checking DBS tools @@"
if [ ! -x $RUNTIMEDIR/tool_ls ]; then
  wget --no-check-certificate https://cmsweb.cern.ch/dbs_discovery/tool_ls -O $RUNTIMEDIR/tool_ls
  chmod +x $RUNTIMEDIR/tool_ls
fi

if [ ! -x $RUNTIMEDIR/dbssql ]; then
  wget --no-check-certificate https://cmsweb.cern.ch/dbs_discovery/dbssql -O $RUNTIMEDIR/dbssql
  chmod +x $RUNTIMEDIR/dbssql
fi

for CMSSW_VERSION in $@; do
  echo "@@ Preparing configuration files for $CMSSW_VERSION @@"
  echo "@@@ Checking dataset list file @@@"
  if [ ! -f ${CMSSW_VERSION}.txt ]; then
    echo "@@@@ No dataset list. retrieving dataset list @@@@"
    curl http://cms-project-relval.web.cern.ch/cms-project-relval/relval_stats/${CMSSW_VERSION}.txt | \
      grep GEN-SIM-RECO | awk -F'|' '{print $2}' | sed -e 's#/GEN-SIM-RECO##g' > ${CMSSW_VERSION}.txt
    if [ $? != 0 ]; then
      echo "@@@@@ Cannot retrive relval dataset list @@@@@"
      continue
    fi
    vi ${CMSSW_VERSION}.txt
  fi
  DATASETS=`cat ${CMSSW_VERSION}.txt`

  echo "@@@ Set up workarea for $CMSSW_VERSION @@@"

  if [ ! -d $CMSSW_VERSION ]; then
    scram project CMSSW $CMSSW_VERSION
  fi

  ## Print error message if scram project fails to set up workarea
  if [ ! -d $CMSSW_VERSION ]; then
    echo "@@@@ Cannot set up project area for $CMSSW_VERSION @@@@"
    continue
  fi

  cd $CMSSW_VERSION/src
  eval `scram runtime -sh`

  if [ ! -d Validation/RPCRecHits ]; then
    cvs co -d Validation/RPCRecHits UserCode/JHGoh/Validation/RPCRecHits
  fi
  scram build

  cd Validation/RPCRecHits/test

  # Make bsub-run script
  echo "@@@ Preparing submission script @@@"
  cat > run.sh <<EOF
#!/bin/bash

cd `pwd`
eval \`scram runtime -sh\`

EOF
  chmod +x run.sh

  echo "@@ Preparing sample cff files @@"
  rm -rf samples
  mkdir samples

  for DATASET in $DATASETS; do
    DATASETNAME=`echo $DATASET | cut -d/ -f 2`
    if [ `echo $DATASET | cut -d/ -f 3 | sed "s/${CMSSW_VERSION}-//g" | cut -b -2` == 'MC' ]; then
      DATASETNAME=${DATASETNAME}_MC
    elif [ `echo $DATASET | cut -d/ -f 3 | sed "s/${CMSSW_VERSION}-//g" | cut -b -2` == 'ST' ]; then
      DATASETNAME=${DATASETNAME}_START
    fi

    DBSQUERY_PREFIX="find dataset where release = $CMSSW_VERSION and dataset like $DATASET"
    
    DATASET_SIM=`$RUNTIMEDIR/dbssql --input="$DBSQUERY_PREFIX/GEN-SIM-DIGI-RAW-HLTDEBUG" | grep -o "'/RelVal.*'" | head -1`
    DATASET_REC=`$RUNTIMEDIR/dbssql --input="$DBSQUERY_PREFIX/GEN-SIM-RECO" | grep -o "'/RelVal.*'" | head -1`

    # Prepare source-cfg files
    if [ X$DATASET_SIM == X ]; then
      echo "No $DATASET found"
      continue
    fi

    if [ X$DATASET_REC == X ]; then
      echo "No $DATASET found"
      continue
    fi

    cat > samples/${DATASETNAME}_cfg.py <<EOF
import FWCore.ParameterSet.Config as cms

maxEvents = cms.untracked.PSet( input = cms.untracked.int32(-1) )
readFiles = cms.untracked.vstring()
secFiles = cms.untracked.vstring()

source = cms.Source ("PoolSource",fileNames = readFiles, secondaryFileNames = secFiles)

readFiles.extend( [
EOF
  
    $RUNTIMEDIR/tool_ls -d $DATASET_REC | grep -v '^ *$' | sed -e "s#^/#'/#g" -e "s#\.root\$#.root',#g" >> samples/${DATASETNAME}_cfg.py
    
    cat >> samples/${DATASETNAME}_cfg.py <<EOF
] );

secFiles.extend( [
EOF

    $RUNTIMEDIR/tool_ls -d $DATASET_SIM | grep -v '^ *$' | sed -e "s#^/#'/#g" -e "s#\.root\$#.root',#g" >> samples/${DATASETNAME}_cfg.py
  
    cat >> samples/${DATASETNAME}_cfg.py <<EOF
] );
EOF

    # GlobalTag settings
    GLOBALTAG=`grep -m 1 -o '\/GEN-SIM-RECO\/[A-Za-z0-9_]\+' samples/${DATASETNAME}_cfg.py | sed -e 's#/GEN-SIM-RECO/##g'`
    echo "globaltag = '$GLOBALTAG::All'" >> samples/${DATASETNAME}_cfg.py

    echo "SAMPLE=$DATASETNAME cmsRun rpcRecHitValidation_cfg.py" >> run.sh

  done

  echo "@@@ Finished Validation environment setup for $CMSSW_VERSION @@@"

  if [ _$NOSUBMIT == _ -a -x /usr/bin/bsub ]; then
    echo "@@@ Submitting jobs @@@"
    bsub -q 8nh run.sh
  fi

  cd $BASEDIR
  echo "@@ Finished $CMSSW_VERSION @@"
done

[ -x /usr/bin/bjobs ] && bjobs
echo "@@ All done! @@"
