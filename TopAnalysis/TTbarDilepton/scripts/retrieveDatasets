#!/usr/bin/env python
import sys
if len(sys.argv) < 2:
    print "Usage: %s CMGVersion"
    sys.exit()

cmgVersion = sys.argv[1]

baseDir = '/store/cmst3/user/cmgtools/CMG'
sourceBase = '/afs/cern.ch/user/j/jhgoh/public/sources/CMG'

sys.path.append(sourceBase)
datasets = __import__(cmgVersion).datasets

## Main routine

dataset_files = {}
dataset_size = {}

import os
for i, dataset in enumerate(datasets):
    print "Retrieving dataset information from eos (%d/%d) : %s ..." % (i+1, len(datasets), dataset)
    eosCommand = "/afs/cern.ch/project/eos/installation/0.2.5/bin/eos.select"
    filterCommand = "grep cmgTuple.*\.root | sort -n -k2 -t_"

    totalSize = 0
    files = []
    for dataPath in datasets[dataset]:
        dataPath = "%s/%s" % (baseDir, dataPath)
        lines = os.popen("%s ls -l %s | %s" % (eosCommand, dataPath, filterCommand)).readlines()
        for line in lines:
            l = line.split()
            size, file = l[4], l[8]
            file = file.strip()
            totalSize += float(size)
            files.append("%s/%s" % (dataPath, file))
    dataset_files[dataset] = files
    dataset_size[dataset] = totalSize

print "Writing datasets to TopAnalysis/TTbarDilepton/data/%s" % cmgVersion
outPath = "%s/src/TopAnalysis/TTbarDilepton/data/%s" % (os.environ["CMSSW_BASE"], cmgVersion)
if not os.path.exists(outPath):
    os.makedirs(outPath)

for dataset in datasets:
    files = dataset_files[dataset]
    totalSize = dataset_size[dataset]

    outFile = open("%s/%s.txt" % (outPath, dataset), "w")
    print>>outFile, "# Dataset = %s" % dataset
    for i, dataPath in enumerate(datasets[dataset]):
        print>>outFile, "# path%d = %s" % (i+1, dataPath)
    print>>outFile, "# nFiles = %d" % len(files)
    print>>outFile, "# fileSize = %.3f GB" % (totalSize/1024/1024/1024)

    for file in dataset_files[dataset]:
        print>>outFile, file

print "Done."
